<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_341321_nexmo_dir.NexmoApplicationCreation</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>NexmoApplicationCreation</name>
        <script><![CDATA[	var NexmoApplicationCreation = Class.create();
	NexmoApplicationCreation.prototype = {
		initialize: function () {},
		create: function () {
			var ApplicationData = {};
		    var answerurl = this.getInstanceUrl()+"/api/x_341321_nexmo_dir/nexmo_call_answer/process/nexmoml/callAnswered";
            var eventurl = this.getInstanceUrl()+"/api/x_341321_nexmo_dir/nexmo_call_event/process/xml/primaryCallStatus";
			var appType = "voice";
			var today = new GlideDateTime();
			ApplicationData.api_key = current.getElement('api_key').toString();
			ApplicationData.api_secret = current.getElement('api_secret').getDecryptedValue().toString();
			ApplicationData.type = "voice";
			ApplicationData.name = "servicenow_nexmo";
			ApplicationData.answer_url = answerurl.toString();
			ApplicationData.event_url = eventurl.toString();
			ApplicationData.event_method = "GET";
			ApplicationData.expire = today;
			var sm = new sn_ws.RESTMessageV2('x_341321_nexmo_dir.nexmoapi', 'Default POST');
			var base_url = sm.getEndpoint();
			var request = new sn_ws.RESTMessageV2();
			request.setEndpoint(base_url);
			request.setHttpMethod('POST');
			request.setRequestHeader("Content-type","application/json");
			request.setRequestBody(JSON.stringify(ApplicationData));
			var responseres = request.execute();
			
			var responsebody = responseres.getBody();
			var obj = JSON.parse(responsebody);	
			if(obj.type == "UNAUTHORIZED"){
				gs.addErrorMessage(gs.getMessage("<b>Please enter valid API Key and Secret Key</b>"));
				return "UNAUTHORIZED";
			}
			var gr = new GlideRecord('x_341321_nexmo_dir_nexmo_config');			
			/*gr.addQuery('internal_name', 'main_and_only');
			gr.query();*/
			var app_id = JSON.stringify(obj.id);
			var app_private_key = JSON.stringify(obj.keys.private_key);
			/*var app_public_key = JSON.stringify(obj.keys.public_key);*/
			var app_name = JSON.stringify(obj.name);		
			var tmpprivate_key;
			if(app_private_key) {
				gr.addQuery('internal_name', 'main_and_only');
				gr.query();
				if(!gr.next()){
					gr.initialize(); 
					gr.application_id = app_id.replace(/\"/g, "");
					gr.answer_url =  answerurl.toString();
					gr.event_url =  eventurl.toString();
					gr.expire = today;
					gr.application_name = app_name.replace(/\"/g, "");
					tmpprivate_key = app_private_key.replace(/\\n/g, "");
					tmpprivate_key = tmpprivate_key.replace(/\"/g, "");
					gr.private_key = tmpprivate_key;
					gr.internal_name = 'main_and_only';
					/*var tmppublic_key = app_public_key.replace(/\\n/g, "");
					tmppublic_key= tmppublic_key.replace(/^"(.*)"$/, '$1');
					gr.public_key = tmppublic_key;*/
					gr.api_key = current.getElement('api_key').toString();
					gr.api_secret = current.getElement('api_secret').toString();
					gr.status = true;
					gr.linkstate=true;
					gr.linkmessage="";				
					gr.insert();
				}else{
					gr.application_id = app_id.replace(/\"/g, "");
					gr.application_type = appType.toString();
					gr.answer_url =  answerurl.toString();
					gr.event_url =  eventurl.toString();
					gr.expire = today;
					gr.application_name = app_name.replace(/\"/g, "");
					tmpprivate_key = app_private_key.replace(/\\n/g, "");
					tmpprivate_key = tmpprivate_key.replace(/\"/g, "");
					gr.private_key = tmpprivate_key;
					gr.api_key = current.getElement('api_key').toString();
					gr.api_secret = current.getElement('api_secret').toString();
					gr.status = true;
					gr.update();
				}
			}
			return true;
			/*var arrToken = [ApplicationData.api_key, ApplicationData.api_secret,JSON.stringify(obj.id), tmpprivate_keys];
			this.getJwtToken(arrToken);
			return arrToken;*/
		},
		
		getInstanceUrl: function () {
			  var url = gs.getProperty('glide.notify.endpoint', '');
			  if (!url)
				  url = gs.getProperty('glide.servlet.uri', '');
			  if (!url)
				  url = gs.getProperty('instance_name') + ".service-now.com";
			  if (url && (!url.startsWith('http://') && !url.startsWith('https://')))
				  url = "https://" + url;
			  if (url && url.endsWith('/'))
				  url = url.slice(0, url.length - 1);
			  return url;
		  },
		
		getJwtToken: function (ARRToken) {

			App_id = ARRToken[2].replace(/\"/g, "");
			var gr = new GlideRecord('x_341321_nexmo_dir_nexmo_config');
			gr.addQuery('application_id', App_id);
			gr.query();
			if (gr.next()) {
				var t_apikey = gr.getValue("api_key");
				var t_apisecret = gr.getValue("api_secret").getDecryptedValue();
				var tempprivatekey = gr.getValue('private_key');
			}
		},

		type: 'NexmoApplicationCreation'
	};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-06 06:40:36</sys_created_on>
        <sys_id>bdef38fcdb113300d94ce4da4b961957</sys_id>
        <sys_mod_count>74</sys_mod_count>
        <sys_name>NexmoApplicationCreation</sys_name>
        <sys_package display_value="Nexmo Direct Driver SMS" source="x_341321_nexmo_dir">d149fedadbfcf300d94ce4da4b96199e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Nexmo Direct Driver SMS">d149fedadbfcf300d94ce4da4b96199e</sys_scope>
        <sys_update_name>sys_script_include_bdef38fcdb113300d94ce4da4b961957</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-06-20 07:37:13</sys_updated_on>
    </sys_script_include>
</record_update>
